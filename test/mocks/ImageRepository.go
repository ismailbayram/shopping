// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/ismailbayram/shopping/internal/media/domain/models"
	mock "github.com/stretchr/testify/mock"
)

// ImageRepository is an autogenerated mock type for the ImageRepository type
type ImageRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *ImageRepository) Create(_a0 *domain.Image) (*domain.Image, error) {
	ret := _m.Called(_a0)

	var r0 *domain.Image
	if rf, ok := ret.Get(0).(func(*domain.Image) *domain.Image); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Image) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetByID provides a mock function with given fields: _a0
func (_m *ImageRepository) GetByID(_a0 uint) (*domain.Image, error) {
	ret := _m.Called(_a0)

	var r0 *domain.Image
	if rf, ok := ret.Get(0).(func(uint) *domain.Image); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Image)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewImageRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewImageRepository creates a new instance of ImageRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewImageRepository(t mockConstructorTestingTNewImageRepository) *ImageRepository {
	mock := &ImageRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
